{"version":3,"sources":["UI/Game.module.css","Controller/PlaylistController.js","Context/PlaylistContext.js","UI/Game.js","UI/Playlist.js","App.js","serviceWorker.js","index.js","App.module.css","UI/Playlist.module.css"],"names":["module","exports","emptyPlaylist","version","default_core_path","default_core_name","label_display_mode","right_thumbnail_mode","left_thumbnail_mode","items","PlaylistController","this","playlist","filteredItems","filename","nameIndex","crcIndex","pathIndex","playlistEvents","StateEvents","filteredItemsEvents","filenameEvents","JSON","parse","stringify","text","Set","toLowerCase","match","map","token","split","c","i","slice","rw","c2","i2","flat","index","tokens","game","position","forEach","rl","push","filenameIndex","label","storeInRefs","tokenize","crc32","crc","length","path","filter","w","wrapped","type","applyFilter","publish","splice","sourceContext","createContext","targetContext","props","core_path","core_name","db_name","className","styles","container","onClick","dbName","core","coreName","corePath","Controller","useContext","controller","useStateEvents","getPlaylistEvents","getfilteredItemsEvents","getFilenameEvents","useState","loading","setLoading","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onabort","console","log","onerror","onload","result","set","readAsText","useDropzone","getRootProps","getInputProps","wrap","content","wrappedgame","Game","onGameClick","key","db_names","dropzone","dropzoneTitle","buttonPanel","empty","bind","blob","Blob","FileSaver","saveAs","save","sourceController","targetController","setFilter","filterType","setFilterType","updateFilter","newFilterType","newFilter","App","header","title","playlistPanel","Playlist","gameData","add","delete","textPanel","onChange","filterText","target","value","rows","disabled","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8395c3f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__1FRtk\",\"label\":\"Game_label__3Xfiz\",\"path\":\"Game_path__3ACC7\",\"crc32\":\"Game_crc32__26Bi1\",\"dbName\":\"Game_dbName__slKDc\",\"core\":\"Game_core__3hxuS\",\"coreName\":\"Game_coreName__1Af_M\",\"corePath\":\"Game_corePath__3Riq4\"};","import { StateEvents } from 'react-state-events'\r\n\r\nconst emptyPlaylist = {\r\n    version: \"1.2\",\r\n    default_core_path: \"\",\r\n    default_core_name: \"\",\r\n    label_display_mode: 0,\r\n    right_thumbnail_mode: 0,\r\n    left_thumbnail_mode: 0,\r\n    items: []\r\n}\r\n\r\nexport default class PlaylistController {\r\n    constructor() {\r\n        this.playlist = null;\r\n        this.filteredItems = null;\r\n        this.filename = null;\r\n        this.nameIndex = {};\r\n        this.crcIndex = {};\r\n        this.pathIndex = {};\r\n        this.playlistEvents = new StateEvents();\r\n        this.filteredItemsEvents = new StateEvents();\r\n        this.filenameEvents = new StateEvents();\r\n    }\r\n\r\n    getPlaylistEvents() {\r\n        return this.playlistEvents;\r\n    }\r\n\r\n    getfilteredItemsEvents() {\r\n        return this.filteredItemsEvents;\r\n    }\r\n\r\n    getFilenameEvents() {\r\n        return this.filenameEvents;\r\n    }\r\n\r\n    getEmptyPlaylist() {\r\n        return JSON.parse(JSON.stringify(emptyPlaylist));\r\n    }\r\n\r\n    tokenize(text) {\r\n        return [...new Set(text.toLowerCase().match(/[a-z0-9]+/g).map((token)=>token.split(\"\").map((c,i)=>token.slice(i)).map((rw)=>rw.split(\"\").map((c2,i2)=>rw.slice(0,i2+1)))).flat(2))];\r\n    }\r\n\r\n    storeInRefs(index,tokens,game,position) {\r\n        tokens.forEach(rl=>index[rl]?index[rl].push({index: position,game: game}):index[rl]=[{index: position,game: game}])\r\n    }\r\n\r\n    index() {\r\n        if (this.playlist && this.playlist.items) {\r\n            this.nameIndex = {};\r\n            this.crcIndex = {};\r\n            this.pathIndex = {};\r\n            this.filenameIndex = {};\r\n            this.playlist.items.forEach((game,index)=>{\r\n                if (game.label) {\r\n                    this.storeInRefs(this.nameIndex,this.tokenize(game.label),game,index);\r\n                }\r\n                if (game.crc32) {\r\n                    const crc = game.crc32.toLowerCase().match(/^[a-z0-9]+/);\r\n                    if (crc.length>0) {\r\n                        this.storeInRefs(this.crcIndex,this.tokenize(crc[0]),game,index);\r\n                    }\r\n                }\r\n                if (game.path && game.path.length>0) {\r\n                    this.storeInRefs(this.pathIndex,this.tokenize(game.path),game,index);\r\n                    this.storeInRefs(this.filenameIndex,this.tokenize(game.path.match(/([^\\\\#]+)\\....$/)[1]),game,index);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    applyFilter(index,tokens) {\r\n        this.filteredItems = [];\r\n        tokens.forEach(token=>{\r\n            if (index[token]) {\r\n                if (this.filteredItems.length>0) {\r\n                    this.filteredItems = this.filteredItems.filter(w=>{return index[token].filter(i=>(w.index===i.index)).length>0;});\r\n                }\r\n                else {\r\n                    this.filteredItems = [ ...index[token] ];\r\n                }\r\n            }\r\n        });\r\n        this.filteredItems = this.filteredItems.map(wrapped=>wrapped.index);\r\n        this.filteredItems = [...new Set(this.filteredItems)];\r\n        this.filteredItems = this.filteredItems.map(index=>({game:this.playlist.items[index], index: index}));\r\n    }\r\n\r\n    filter(type, filter) {\r\n        const tokens = filter.toLowerCase().match(/[a-z0-9]+/g)||[];\r\n        if (this.playlist && this.playlist.items) {\r\n            if (tokens.length>0) {\r\n                switch(type) {\r\n                    case \"label\":\r\n                        this.applyFilter(this.nameIndex,tokens);\r\n                        break;\r\n                    case \"crc32\":\r\n                        this.applyFilter(this.crcIndex,tokens);\r\n                        break;\r\n                    case \"path\":\r\n                        this.applyFilter(this.pathIndex,tokens);\r\n                        break;\r\n                    case \"filename\":\r\n                        this.applyFilter(this.filenameIndex,tokens);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.filteredItems = this.playlist.items.map((game,index)=>({index: index, game: game}));\r\n            }\r\n            this.filteredItemsEvents.publish([...this.filteredItems]);\r\n        }\r\n    }\r\n\r\n    publish() {\r\n        this.filenameEvents.publish(this.filename);\r\n        this.playlistEvents.publish(this.playlist);\r\n        this.filteredItemsEvents.publish(this.filteredItems);\r\n    }\r\n\r\n    empty() {\r\n        this.playlist = null;\r\n        this.filteredItems = null;\r\n        this.filename = null;\r\n        this.publish();\r\n    }\r\n\r\n    set(playlist,filename) {\r\n        this.filename = filename;\r\n        this.playlist = JSON.parse(JSON.stringify(playlist));\r\n        //this.filteredItems = [...this.playlist.items];\r\n        this.index();\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n    \r\n    add(game) {\r\n        this.playlist = JSON.parse(JSON.stringify(this.playlist));\r\n        this.playlist.items.push({...game});\r\n        this.index();\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n\r\n    delete(index) {\r\n        this.playlist = JSON.parse(JSON.stringify(this.playlist));\r\n        this.playlist.items.splice(index,1);\r\n        this.index();\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n\r\n}\r\n","import { createContext } from 'react';\r\nimport PlaylistController from '../Controller/PlaylistController';\r\n\r\nconst sourceContext = createContext(new PlaylistController());\r\nconst targetContext = createContext(new PlaylistController());\r\n\r\nexport { sourceContext, targetContext };\r\n","import React from 'react';\r\nimport styles from './Game.module.css';\r\n\r\nexport default (props)=>{\r\n    const {path, label, core_path, core_name, crc32, db_name} = props;\r\n    return (\r\n        <div className={styles.container} onClick={props.onClick}>\r\n            <div className={styles.label}>{label}</div>\r\n            <div className={styles.path}>{path}</div>\r\n            <div className={styles.crc32}>{crc32}</div>\r\n            <div className={styles.dbName}>{db_name}</div>\r\n            <div className={styles.core}>\r\n            <div className={styles.coreName}>{`${core_name}: `}</div>\r\n            <div className={styles.corePath}>{core_path}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useContext, useCallback } from 'react';\r\nimport { useStateEvents } from 'react-state-events';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport FileSaver from 'file-saver';\r\nimport LoadOverlay from 'react-loading-retry-overlay';\r\n\r\nimport styles from './Playlist.module.css';\r\n\r\nimport Game from './Game'\r\n\r\nconst save=(text,filename)=>{\r\n  var blob = new Blob([text], {type: \"text/plain;charset=utf-8\"});\r\n  FileSaver.saveAs(blob, filename);\r\n}\r\n\r\nexport default (props)=>{\r\n  const Controller = useContext(props.controller);\r\n  const [playlist] = useStateEvents(null, Controller.getPlaylistEvents());\r\n  const [filteredItems] = useStateEvents(null, Controller.getfilteredItemsEvents());\r\n  const [filename] = useStateEvents(null, Controller.getFilenameEvents());\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    if (acceptedFiles && acceptedFiles.length>0) {\r\n      setLoading(true);\r\n      const file = acceptedFiles[0];\r\n      const reader = new FileReader()\r\n  \r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n        const text = reader.result\r\n        Controller.set(JSON.parse(text),file.path);\r\n        setLoading(false);\r\n      }\r\n      reader.readAsText(file)  \r\n    }\r\n  }, [Controller]);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div className={`${props.className?props.className+\" \":\"\"}${styles.wrap}`}>\r\n      <div className={styles.filename}>\r\n        {filename}\r\n      </div>\r\n      <LoadOverlay className={styles.content} loading={loading}>\r\n        {\r\n          filteredItems?\r\n            filteredItems.map(\r\n              (wrappedgame)=> (\r\n                <Game\r\n                  onClick={()=>props.onGameClick(wrappedgame.game,wrappedgame.index)}\r\n                  key={wrappedgame.index}\r\n                  path={wrappedgame.game.path}\r\n                  label={wrappedgame.game.label}\r\n                  core_path={wrappedgame.game.core_path}\r\n                  core_name={wrappedgame.game.core_name}\r\n                  crc32={wrappedgame.game.crc32}\r\n                  db_name={wrappedgame.game.db_names}\r\n                />\r\n              )\r\n            )\r\n          :\r\n            <div {...getRootProps()} className={styles.dropzone}>\r\n              <input {...getInputProps()} />\r\n              <div className={styles.dropzoneTitle}>Drop playlist here!</div>\r\n            </div>\r\n        }\r\n      </LoadOverlay>\r\n\r\n      <div className={styles.buttonPanel}>\r\n        <button onClick={Controller.empty.bind(Controller)}>reset</button>\r\n        <button onClick={()=>{save(JSON.stringify(playlist,null,2),filename)}}>export</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport {sourceContext, targetContext} from './Context/PlaylistContext'\r\n\r\nimport Playlist from './UI/Playlist.js'\r\n\r\nexport default ()=>{\r\n  const sourceController = useContext(sourceContext);\r\n  const targetController = useContext(targetContext);\r\n  const [filter,setFilter] = useState(\"\");\r\n  const [filterType,setFilterType] = useState(\"label\");\r\n\r\n  const copyOnClick = (gameData,index)=>{\r\n    targetController.add(gameData);\r\n    targetController.filter(\"label\", filter);\r\n  }\r\n\r\n  const deleteOnClick = (gameData,index)=>{\r\n    targetController.delete(index);\r\n    targetController.filter(\"label\", filter);\r\n  }\r\n\r\n  const clearFilter = ()=>{\r\n    setFilter(\"\");\r\n    sourceController.filter(\"label\",\"\");\r\n    targetController.filter(\"label\",\"\");\r\n  }\r\n\r\n  const onFilterTypeChange = newFilterType=>{\r\n    setFilterType(newFilterType.target.value);\r\n    if (filter!==\"\") {\r\n      updateFilter(newFilterType.target.value,filter);\r\n    }\r\n  }\r\n  \r\n  const onFilterChange = filterText=>{\r\n    setFilter(filterText.target.value);\r\n    updateFilter(filterType,filterText.target.value);\r\n  }\r\n\r\n  const updateFilter = (newFilterType,newFilter)=>{\r\n    sourceController.filter(newFilterType,newFilter);\r\n    targetController.filter(newFilterType,newFilter);    \r\n  }\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <header className={styles.header}>\r\n        <h1 className={styles.title}>Retroarch playlist mixer</h1>\r\n      </header>\r\n      <div className={styles.playlistPanel}>\r\n        <Playlist controller={sourceContext} onGameClick={copyOnClick}/>\r\n        <Playlist controller={targetContext} onGameClick={deleteOnClick}/>\r\n      </div>\r\n      <div className={styles.textPanel}>\r\n        <div className={styles.filter}>\r\n          <input onChange={onFilterChange} value={filter} className={styles.filterText} />\r\n          <select value={filterType} onChange={onFilterTypeChange}>\r\n            <option value=\"label\">Label</option>\r\n            <option value=\"crc32\">CRC32</option>\r\n            <option value=\"path\">Full path</option>\r\n            <option value=\"filename\">Filename</option>\r\n          </select>\r\n          <button onClick={clearFilter}>clear</button>\r\n        </div>\r\n        <textarea rows=\"6\" disabled value=\"console\"></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1Eui0\",\"App\":\"App_App__3xJ5q\",\"header\":\"App_header__1FxIt\",\"playlistPanel\":\"App_playlistPanel__fAtzO\",\"textPanel\":\"App_textPanel__1ksXY\",\"filter\":\"App_filter__2rpJO\",\"filterText\":\"App_filterText__rjA92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Playlist_wrap__25CD4\",\"content\":\"Playlist_content__3q2tv\",\"buttonPanel\":\"Playlist_buttonPanel__1XzPe\",\"filename\":\"Playlist_filename__3TaF-\",\"dropzone\":\"Playlist_dropzone__3jSaX\",\"dropzoneTitle\":\"Playlist_dropzoneTitle__MvR8x\"};"],"sourceRoot":""}