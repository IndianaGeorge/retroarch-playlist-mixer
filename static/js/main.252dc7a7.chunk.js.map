{"version":3,"sources":["Controller/PlaylistController.js","Context/PlaylistContext.js","UI/Game.js","UI/Playlist.js","App.js","serviceWorker.js","index.js","UI/Game.module.css","App.module.css","UI/Playlist.module.css"],"names":["emptyPlaylist","version","default_core_path","default_core_name","label_display_mode","right_thumbnail_mode","left_thumbnail_mode","items","PlaylistController","this","playlist","filteredItems","filename","nameIndex","crcIndex","pathIndex","playlistEvents","StateEvents","filteredItemsEvents","filenameEvents","JSON","parse","stringify","text","blob","Blob","type","FileSaver","saveAs","Set","toLowerCase","match","map","token","split","c","i","slice","rw","c2","i2","flat","index","tokens","wrap","forEach","rl","push","game","label","storeInRefs","tokenize","fullLabel","crc32","crc","length","fullCrc","path","fullPath","filenameIndex","fullFilename","clearIndexes","allItems","indexSingle","filter","w","applyFilter","publish","gameCopy","splice","sourceContext","createContext","targetContext","props","core_path","core_name","db_name","className","styles","container","onClick","dbName","core","coreName","corePath","Controller","useContext","controller","useStateEvents","getfilteredItemsEvents","getFilenameEvents","useState","loading","setLoading","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onabort","console","log","onerror","onload","result","set","readAsText","useDropzone","getRootProps","getInputProps","content","wrappedgame","Game","onGameClick","key","db_names","dropzone","dropzoneTitle","buttonPanel","Object","keys","buttons","sourceController","targetController","setFilter","filterType","setFilterType","changeCoreOnCopy","setChangeCoreOnCopy","deduceLabelOnCopy","setDeduceLabelOnCopy","changeBasePathOnCopy","setChangeBasePathOnCopy","coreSourceOnCopy","setCoreSourceOnCopy","labelCheckOnCopy","setLabelCheckOnCopy","basePathOnCopy","setBasePathOnCopy","changeCoreOnFix","setChangeCoreOnFix","pickOnlyOnFix","setPickOnlyOnFix","appendToLabelOnFix","setAppendToLabelOnFix","changeBasePathOnFix","setChangeBasePathOnFix","coreSourceOnFix","setCoreSourceOnFix","pickOnlyOnFixType","setPickOnlyTypeOnFix","pickOnlyOnFixSpec","setPickOnlyOnFixSpec","deduceLabelOnFix","setDeduceLabelOnFix","appendToLabelOnFixText","setAppendToLabelOnFixText","changeBasePathOnFixPath","setChangeBasePathOnFixPath","matchTypeOnFix","setMatchTypeOnFix","copyOptsVisible","setCopyOptsVisible","fixOptsVisible","setFixOptsVisible","copyWithOptions","gameData","source","target","newGameData","matches","add","updateFilter","newFilterType","newFilter","sourceButtons","Reset","empty","bind","findLeftSideForPick","leftSide","applyFixChanges","targetButtons","getEmptyPlaylist","list","delete","Export","exportPlaylist","App","header","title","playlistPanel","Playlist","checked","onChange","newChangeCoreOnCopy","value","newCoreSourceOnCopy","newDeduceLabelOnCopy","newLabelCheckOnCopy","newChangeBasePathOnCopy","newBasePathOnCopy","disabled","newMatchTypeOnFix","newChangeCoreOnFix","newCoreSourceOnFix","newPickOnlyOnFix","newPickOnlyOnFixType","newPickOnlyOnFixSpec","newDeduceLabelOnFix","newAppendToLabelOnFix","newAppendToLabelOnFixText","newChangeBasePathOnFix","newChangeBasePathOnFixPath","textPanel","filterText","rows","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.252dc7a7.chunk.js","sourcesContent":["import { StateEvents } from 'react-state-events'\r\nimport FileSaver from 'file-saver';\r\n\r\nconst emptyPlaylist = {\r\n    version: \"1.2\",\r\n    default_core_path: \"\",\r\n    default_core_name: \"\",\r\n    label_display_mode: 0,\r\n    right_thumbnail_mode: 0,\r\n    left_thumbnail_mode: 0,\r\n    items: []\r\n}\r\n\r\nexport default class PlaylistController {\r\n    constructor() {\r\n        this.playlist = null;\r\n        this.filteredItems = null;\r\n        this.filename = null;\r\n        this.nameIndex = {};\r\n        this.crcIndex = {};\r\n        this.pathIndex = {};\r\n        this.playlistEvents = new StateEvents();\r\n        this.filteredItemsEvents = new StateEvents();\r\n        this.filenameEvents = new StateEvents();\r\n    }\r\n\r\n    getPlaylistEvents() {\r\n        return this.playlistEvents;\r\n    }\r\n\r\n    getfilteredItemsEvents() {\r\n        return this.filteredItemsEvents;\r\n    }\r\n\r\n    getFilenameEvents() {\r\n        return this.filenameEvents;\r\n    }\r\n\r\n    getEmptyPlaylist() {\r\n        return JSON.parse(JSON.stringify(emptyPlaylist));\r\n    }\r\n\r\n    exportPlaylist() {\r\n        if (this.playlist) {\r\n            const text = JSON.stringify(this.playlist,null,2);\r\n            var blob = new Blob([text], {type: \"text/plain;charset=utf-8\"});\r\n            FileSaver.saveAs(blob, this.filename);    \r\n        }\r\n    }\r\n      \r\n    tokenize(text) {\r\n        return [...new Set(text.toLowerCase().match(/[a-z0-9]+/g).map((token)=>token.split(\"\").map((c,i)=>token.slice(i)).map((rw)=>rw.split(\"\").map((c2,i2)=>rw.slice(0,i2+1)))).flat(2))];\r\n    }\r\n\r\n    storeInRefs(index,tokens,wrap) {\r\n        tokens.forEach(rl=>index[rl]?index[rl].push(wrap.index):index[rl]=[wrap.index])\r\n    }\r\n\r\n    indexSingle(wrap) {\r\n        if (wrap.game.label) {\r\n            this.storeInRefs(this.nameIndex,this.tokenize(wrap.game.label),wrap);\r\n            if (this.fullLabel[wrap.game.label]) {\r\n                this.fullLabel[wrap.game.label].push(wrap);\r\n            }\r\n            else {\r\n                this.fullLabel[wrap.game.label] = [wrap];\r\n            }\r\n        }\r\n        if (wrap.game.crc32) {\r\n            const crc = wrap.game.crc32.toLowerCase().match(/^[a-z0-9]+/);\r\n            if (crc.length>0) {\r\n                this.storeInRefs(this.crcIndex,this.tokenize(crc[0]),wrap);\r\n            }\r\n            if (this.fullCrc[wrap.game.crc32]) {\r\n                this.fullCrc[wrap.game.crc32].push(wrap);\r\n            }\r\n            else {\r\n                this.fullCrc[wrap.game.crc32] = [wrap];\r\n            }\r\n\r\n        }\r\n        if (wrap.game.path && wrap.game.path.length>0) {\r\n            this.storeInRefs(this.pathIndex,this.tokenize(wrap.game.path),wrap);\r\n            if (this.fullPath[wrap.game.path]) {\r\n                this.fullPath[wrap.game.path].push(wrap);\r\n            }\r\n            else {\r\n                this.fullPath[wrap.game.path] = [wrap];\r\n            }\r\n\r\n            const filename = wrap.game.path.match(/([^\\\\#]+\\....)$/)[1];\r\n            this.storeInRefs(this.filenameIndex,this.tokenize(filename),wrap);\r\n            if (this.fullFilename[filename]) {\r\n                this.fullFilename[filename].push(wrap);\r\n            }\r\n            else {\r\n                this.fullFilename[filename] = [wrap];\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    index() {\r\n        if (this.playlist && this.playlist.items) {\r\n            this.clearIndexes();\r\n            this.allItems = this.playlist.items.map((game,index)=>({index: index, game: game}));\r\n            this.allItems.forEach(wrap=>this.indexSingle(wrap));\r\n        }\r\n    }\r\n\r\n    clearIndexes() {\r\n        this.nameIndex = {};\r\n        this.crcIndex = {};\r\n        this.pathIndex = {};\r\n        this.filenameIndex = {};\r\n        this.allItems = [];\r\n        this.fullLabel = {};\r\n        this.fullCrc = {};\r\n        this.fullPath = {};\r\n        this.fullFilename = {};\r\n    }\r\n\r\n    applyFilter(index,tokens) {\r\n        this.filteredItems = [];\r\n        tokens.forEach(token=>{\r\n            if (index[token]) {\r\n                if (this.filteredItems.length>0) {\r\n                    this.filteredItems = this.filteredItems.filter(w=>{return index[token].filter(i=>(w===i)).length>0;});\r\n                }\r\n                else {\r\n                    this.filteredItems = [ ...index[token] ];\r\n                }\r\n            }\r\n        });\r\n        this.filteredItems = [...new Set(this.filteredItems)];\r\n        this.filteredItems = this.filteredItems.map(index=>(this.allItems[index]));\r\n    }\r\n\r\n    filter(type, filter) {\r\n        const tokens = filter.toLowerCase().match(/[a-z0-9]+/g)||[];\r\n        if (this.playlist && this.playlist.items) {\r\n            if (tokens.length>0) {\r\n                switch(type) {\r\n                    case \"label\":\r\n                        this.applyFilter(this.nameIndex,tokens);\r\n                        break;\r\n                    case \"crc32\":\r\n                        this.applyFilter(this.crcIndex,tokens);\r\n                        break;\r\n                    case \"path\":\r\n                        this.applyFilter(this.pathIndex,tokens);\r\n                        break;\r\n                    case \"filename\":\r\n                        this.applyFilter(this.filenameIndex,tokens);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.filteredItems = [...this.allItems];\r\n            }\r\n            this.filteredItemsEvents.publish(this.filteredItems);\r\n        }\r\n    }\r\n\r\n    publish() {\r\n        this.filenameEvents.publish(this.filename);\r\n        this.playlistEvents.publish(this.playlist);\r\n        this.filteredItemsEvents.publish(this.filteredItems);\r\n    }\r\n\r\n    empty() {\r\n        this.playlist = null;\r\n        this.filteredItems = null;\r\n        this.filename = null;\r\n        this.clearIndexes();\r\n        this.publish();\r\n    }\r\n\r\n    set(playlist,filename) {\r\n        this.filename = filename;\r\n        this.playlist = JSON.parse(JSON.stringify(playlist));\r\n        this.index();\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n    \r\n    add(game) {\r\n        this.playlist = JSON.parse(JSON.stringify(this.playlist));\r\n        const gameCopy = {...game};\r\n        const wrap = {index: this.playlist.items.length, game: gameCopy};\r\n        this.allItems.push(wrap);\r\n        this.playlist.items.push(gameCopy);\r\n        this.indexSingle(wrap);\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n\r\n    delete(index) {\r\n        this.playlist = JSON.parse(JSON.stringify(this.playlist));\r\n        this.playlist.items.splice(index,1);\r\n        this.index();\r\n        this.filter(\"label\",\"\");\r\n        this.publish();\r\n    }\r\n\r\n}\r\n","import { createContext } from 'react';\r\nimport PlaylistController from '../Controller/PlaylistController';\r\n\r\nconst sourceContext = createContext(new PlaylistController());\r\nconst targetContext = createContext(new PlaylistController());\r\n\r\nexport { sourceContext, targetContext };\r\n","import React from 'react';\r\nimport styles from './Game.module.css';\r\n\r\nexport default (props)=>{\r\n    const {path, label, core_path, core_name, crc32, db_name} = props;\r\n    return (\r\n        <div className={styles.container} onClick={props.onClick}>\r\n            <div className={styles.label}>{label}</div>\r\n            <div className={styles.path}>{path}</div>\r\n            <div className={styles.crc32}>{crc32}</div>\r\n            <div className={styles.dbName}>{db_name}</div>\r\n            <div className={styles.core}>\r\n            <div className={styles.coreName}>{`${core_name}: `}</div>\r\n            <div className={styles.corePath}>{core_path}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useContext, useCallback } from 'react';\r\nimport { useStateEvents } from 'react-state-events';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport LoadOverlay from 'react-loading-retry-overlay';\r\n\r\nimport styles from './Playlist.module.css';\r\n\r\nimport Game from './Game'\r\n\r\nexport default (props)=>{\r\n  const Controller = useContext(props.controller);\r\n  const [filteredItems] = useStateEvents(null, Controller.getfilteredItemsEvents());\r\n  const [filename] = useStateEvents(null, Controller.getFilenameEvents());\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    if (acceptedFiles && acceptedFiles.length>0) {\r\n      setLoading(true);\r\n      const file = acceptedFiles[0];\r\n      const reader = new FileReader()\r\n  \r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n        const text = reader.result\r\n        Controller.set(JSON.parse(text),file.path);\r\n        setLoading(false);\r\n      }\r\n      reader.readAsText(file)  \r\n    }\r\n  }, [Controller]);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div className={`${props.className?props.className+\" \":\"\"}${styles.wrap}`}>\r\n      <div className={styles.filename}>\r\n        {filename}\r\n      </div>\r\n      <LoadOverlay className={styles.content} loading={loading}>\r\n        {\r\n          filteredItems?\r\n            filteredItems.map(\r\n              (wrappedgame)=> (\r\n                <Game\r\n                  onClick={()=>props.onGameClick(wrappedgame.game,wrappedgame.index)}\r\n                  key={wrappedgame.index}\r\n                  path={wrappedgame.game.path}\r\n                  label={wrappedgame.game.label}\r\n                  core_path={wrappedgame.game.core_path}\r\n                  core_name={wrappedgame.game.core_name}\r\n                  crc32={wrappedgame.game.crc32}\r\n                  db_name={wrappedgame.game.db_names}\r\n                />\r\n              )\r\n            )\r\n          :\r\n            <div {...getRootProps()} className={styles.dropzone}>\r\n              <input {...getInputProps()} />\r\n              <div className={styles.dropzoneTitle}>Drop playlist here!</div>\r\n            </div>\r\n        }\r\n      </LoadOverlay>\r\n\r\n      <div className={styles.buttonPanel}>\r\n        {\r\n          Object.keys(props.buttons).map(\r\n            (key)=>(\r\n              <button key={key} onClick={props.buttons[key]}>{key}</button>\r\n            )\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport {sourceContext, targetContext} from './Context/PlaylistContext'\r\n\r\nimport Playlist from './UI/Playlist.js'\r\n\r\nexport default ()=>{\r\n  const sourceController = useContext(sourceContext);\r\n  const targetController = useContext(targetContext);\r\n  const [filter,setFilter] = useState(\"\");\r\n  const [filterType,setFilterType] = useState(\"label\");\r\n  const [changeCoreOnCopy,setChangeCoreOnCopy] = useState(false);\r\n  const [deduceLabelOnCopy,setDeduceLabelOnCopy] = useState(false);\r\n  const [changeBasePathOnCopy,setChangeBasePathOnCopy] = useState(false);\r\n  const [coreSourceOnCopy,setCoreSourceOnCopy] = useState(\"detect\");\r\n  const [labelCheckOnCopy,setLabelCheckOnCopy] = useState(\"\");\r\n  const [basePathOnCopy,setBasePathOnCopy] = useState(\"C:\\\\\");\r\n  const [changeCoreOnFix,setChangeCoreOnFix] = useState(false);\r\n  const [pickOnlyOnFix,setPickOnlyOnFix] = useState(false);\r\n  const [appendToLabelOnFix,setAppendToLabelOnFix] = useState(false);\r\n  const [changeBasePathOnFix,setChangeBasePathOnFix] = useState(false);\r\n  const [coreSourceOnFix,setCoreSourceOnFix] = useState(\"detect\");\r\n  const [pickOnlyOnFixType,setPickOnlyTypeOnFix] = useState(\"label\");\r\n  const [pickOnlyOnFixSpec,setPickOnlyOnFixSpec] = useState(\"\");\r\n  const [deduceLabelOnFix,setDeduceLabelOnFix] = useState(false);\r\n  const [appendToLabelOnFixText,setAppendToLabelOnFixText] = useState(\"(fixed)\");\r\n  const [changeBasePathOnFixPath,setChangeBasePathOnFixPath] = useState(\"C:\\\\\");\r\n  const [matchTypeOnFix,setMatchTypeOnFix] = useState(\"crc\");\r\n  const [copyOptsVisible,setCopyOptsVisible] = useState(false);\r\n  const [fixOptsVisible,setFixOptsVisible] = useState(false);\r\n  \r\n  const copyOnClick = (gameData,index)=>{\r\n    if (targetController.playlist) {\r\n      copyWithOptions(gameData,sourceController,targetController);\r\n      targetController.filter(filterType, filter);\r\n    }\r\n  }\r\n\r\n  const copyAll = ()=>{\r\n    if (sourceController.playlist) {\r\n      sourceController.playlist.items.forEach(gameData => {\r\n        copyWithOptions(gameData,sourceController,targetController);\r\n      });\r\n      targetController.filter(filterType, filter);\r\n    }\r\n  }\r\n\r\n  const copyWithOptions = (gameData,source,target)=>{\r\n    const newGameData = {...gameData};\r\n    if (changeCoreOnCopy) {\r\n      switch (coreSourceOnCopy) {\r\n        case \"sourcePlaylist\":\r\n          newGameData.core_path = source.playlist.default_core_path;\r\n          newGameData.core_name = source.playlist.default_core_name;\r\n          break;\r\n        case \"targetPlaylist\":\r\n          newGameData.core_path = target.playlist.default_core_path;\r\n          newGameData.core_name = target.playlist.default_core_name;\r\n          break;\r\n        case \"detect\":\r\n          newGameData.core_path = \"DETECT\";\r\n          newGameData.core_name = \"DETECT\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (deduceLabelOnCopy && gameData.path && (gameData.label === labelCheckOnCopy)) {\r\n      const matches = gameData.path.match(/([^\\\\#]+)\\....$/);\r\n      if (matches.length>1) {\r\n        newGameData.label = matches[1];\r\n      }\r\n    }\r\n    if (changeBasePathOnCopy && gameData.path) {\r\n      const matches = gameData.path.match(/([^\\\\]+\\....)$/);\r\n      if (matches.length>1) {\r\n        newGameData.path = `${basePathOnCopy}${matches[1]}`;\r\n      }\r\n    }\r\n    target.add(newGameData);\r\n  }\r\n\r\n  const deleteOnClick = (gameData,index)=>{\r\n    targetController.delete(index);\r\n    targetController.filter(filterType, filter);\r\n  }\r\n\r\n  const clearFilter = ()=>{\r\n    setFilter(\"\");\r\n    updateFilter(filterType,\"\");\r\n  }\r\n\r\n  const onFilterTypeChange = newFilterType=>{\r\n    setFilterType(newFilterType.target.value);\r\n    if (filter!==\"\") {\r\n      updateFilter(newFilterType.target.value,filter);\r\n    }\r\n  }\r\n\r\n  const onFilterChange = filterText=>{\r\n    setFilter(filterText.target.value);\r\n    updateFilter(filterType,filterText.target.value);\r\n  }\r\n\r\n  const updateFilter = (newFilterType,newFilter)=>{\r\n    sourceController.filter(newFilterType,newFilter);\r\n    targetController.filter(newFilterType,newFilter);    \r\n  }\r\n\r\n  const onChangeChangeCoreOnCopy = (newChangeCoreOnCopy)=>{\r\n    setChangeCoreOnCopy(newChangeCoreOnCopy.target.checked);\r\n  }\r\n\r\n  const onChangeDeduceLabelOnCopy = (newDeduceLabelOnCopy)=>{\r\n    setDeduceLabelOnCopy(newDeduceLabelOnCopy.target.checked);\r\n  }\r\n\r\n  const onChangeChangeBasePathOnCopy = (newChangeBasePathOnCopy)=>{\r\n    setChangeBasePathOnCopy(newChangeBasePathOnCopy.target.checked);\r\n  }\r\n\r\n  const onChangeCoreSourceOnCopy = (newCoreSourceOnCopy)=>{\r\n    setCoreSourceOnCopy(newCoreSourceOnCopy.target.value);\r\n  }\r\n\r\n  const onChangeLabelCheckOnCopy = (newLabelCheckOnCopy)=>{\r\n    setLabelCheckOnCopy(newLabelCheckOnCopy.target.value);\r\n  }\r\n\r\n  const onChangeBasePathOnCopy = (newBasePathOnCopy)=>{\r\n    setBasePathOnCopy(newBasePathOnCopy.target.value);\r\n  }\r\n\r\n  const onChangeChangeCoreOnFix = (newChangeCoreOnFix)=>{\r\n    setChangeCoreOnFix(newChangeCoreOnFix.target.checked);\r\n  }\r\n  const onChangePickOnlyOnFix = (newPickOnlyOnFix)=>{\r\n    setPickOnlyOnFix(newPickOnlyOnFix.target.checked);\r\n  }\r\n  const onChangeAppendToLabelOnFix = (newAppendToLabelOnFix)=>{\r\n    setAppendToLabelOnFix(newAppendToLabelOnFix.target.checked);\r\n  }\r\n  const onChangeChangeBasePathOnFix = (newChangeBasePathOnFix)=>{\r\n    setChangeBasePathOnFix(newChangeBasePathOnFix.target.checked);\r\n  }\r\n\r\n  const onChangeCoreSourceOnFix = (newCoreSourceOnFix)=>{\r\n    setCoreSourceOnFix(newCoreSourceOnFix.target.value);\r\n  }\r\n\r\n  const onChangePickOnlyOnFixType = (newPickOnlyOnFixType)=>{\r\n    setPickOnlyTypeOnFix(newPickOnlyOnFixType.target.value);\r\n  }\r\n\r\n  const onChangePickOnlyOnFixSpec = (newPickOnlyOnFixSpec)=>{\r\n    setPickOnlyOnFixSpec(newPickOnlyOnFixSpec.target.value);\r\n  }\r\n\r\n  const onChangeDeduceLabelOnFix = (newDeduceLabelOnFix)=>{\r\n    setDeduceLabelOnFix(newDeduceLabelOnFix.target.checked);\r\n  }\r\n\r\n  const onChangeAppendToLabelOnFixText = (newAppendToLabelOnFixText)=>{\r\n    setAppendToLabelOnFixText(newAppendToLabelOnFixText.target.value);\r\n  }\r\n\r\n  const onChangeChangeBasePathOnFixPath = (newChangeBasePathOnFixPath)=>{\r\n    setChangeBasePathOnFixPath(newChangeBasePathOnFixPath);\r\n  }\r\n\r\n  const onChangeMatchTypeOnFix = (newMatchTypeOnFix)=>{\r\n    setMatchTypeOnFix(newMatchTypeOnFix.target.value);\r\n  }\r\n\r\n  const onClickCopyOpts = ()=>{\r\n    setCopyOptsVisible(!copyOptsVisible);\r\n  }\r\n\r\n  const onClickFixOpts = ()=>{\r\n    setFixOptsVisible(!fixOptsVisible);\r\n  }\r\n\r\n  const newTargetPlaylist = ()=>{\r\n    targetController.set(targetController.getEmptyPlaylist(),\"New Retroarch playlist.lpl\");\r\n  }\r\n\r\n  const sourceButtons={\r\n    Reset: sourceController.empty.bind(sourceController),\r\n    \"Copy all\": copyAll,\r\n  }\r\n\r\n  const fixAll = ()=>{\r\n    let list;\r\n    switch (matchTypeOnFix) {\r\n      case \"label\":\r\n        list = targetController.filteredItems.filter(wrap=>(!pickOnlyOnFix || (findLeftSideForPick(wrap.game,pickOnlyOnFixType)===pickOnlyOnFixSpec))).map(wrap=>wrap.game.label);\r\n        break;\r\n      case \"filename\":\r\n        list = targetController.filteredItems.filter(wrap=>(!pickOnlyOnFix || (findLeftSideForPick(wrap.game,pickOnlyOnFixType)===pickOnlyOnFixSpec))).map(wrap=>wrap.game.path.match(/([^\\\\#]+\\....)$/)[1]);\r\n        break;\r\n      case \"crc\":\r\n        list = targetController.filteredItems.filter(wrap=>(!pickOnlyOnFix || (findLeftSideForPick(wrap.game,pickOnlyOnFixType)===pickOnlyOnFixSpec))).map(wrap=>wrap.game.crc32);\r\n        break;\r\n      case \"fullpath\":\r\n        list = targetController.filteredItems.filter(wrap=>(!pickOnlyOnFix || (findLeftSideForPick(wrap.game,pickOnlyOnFixType)===pickOnlyOnFixSpec))).map(wrap=>wrap.game.path);\r\n        break;\r\n      default:\r\n        list = [];\r\n        break;\r\n    }\r\n    list.forEach(i=>{\r\n      switch (matchTypeOnFix) {\r\n        case \"label\":\r\n          if (sourceController.fullLabel[i] && sourceController.fullLabel[i].length===1) {\r\n            while (targetController.fullLabel[i] && targetController.fullLabel[i].length>0) {\r\n              targetController.delete(targetController.fullLabel[i][0].index);\r\n            }\r\n            targetController.add(applyFixChanges(sourceController.fullLabel[i][0].game),sourceController,targetController);\r\n          }\r\n          break;\r\n        case \"filename\":\r\n          if (sourceController.fullFilename[i] && sourceController.fullFilename[i].length===1) {\r\n            while (targetController.fullFilename[i] && targetController.fullFilename[i].length>0) {\r\n              targetController.delete(targetController.fullFilename[i][0].index);\r\n            }\r\n            targetController.add(applyFixChanges(sourceController.fullFilename[i][0].game,sourceController,targetController));\r\n          }\r\n          break;\r\n        case \"crc\":\r\n          if (sourceController.fullCrc[i] && sourceController.fullCrc[i].length===1) {\r\n            while (targetController.fullCrc[i] && targetController.fullCrc[i].length>0) {\r\n              targetController.delete(targetController.fullCrc[i][0].index);\r\n            }\r\n            targetController.add(applyFixChanges(sourceController.fullCrc[i][0].game,sourceController,targetController));\r\n          }\r\n          break;\r\n        case \"fullpath\":\r\n          if (sourceController.fullPath[i] && sourceController.fullPath[i].length===1) {\r\n            while (targetController.fullPath[i] && targetController.fullPath[i].length>0) {\r\n              targetController.delete(targetController.fullPath[i][0].index);\r\n            }\r\n            targetController.add(applyFixChanges(sourceController.fullPath[i][0].game,sourceController,targetController));            \r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  const findLeftSideForPick = (gameData,type)=>{\r\n    let leftSide = \"\";\r\n    switch (type) {\r\n      case \"label\":\r\n        leftSide = gameData.label;\r\n        break;\r\n      case \"crc\":\r\n        leftSide = gameData.crc32;\r\n        break;\r\n      case \"basePath\":\r\n        if (gameData.path) {\r\n          const match = gameData.path.match(/(.+?)[^\\\\]+\\....$/);\r\n          if (match.length>1) {\r\n            leftSide = match[1];\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return leftSide;\r\n  }\r\n\r\n  const applyFixChanges = (gameData,source,target)=>{\r\n    const newGameData = {...gameData};\r\n    if (changeCoreOnFix) {\r\n      switch (coreSourceOnFix) {\r\n        case \"sourcePlaylist\":\r\n          newGameData.core_path = source.playlist.default_core_path;\r\n          newGameData.core_name = source.playlist.default_core_name;\r\n          break;\r\n        case \"targetPlaylist\":\r\n          newGameData.core_path = target.playlist.default_core_path;\r\n          newGameData.core_name = target.playlist.default_core_name;\r\n          break;\r\n        case \"detect\":\r\n          newGameData.core_path = \"DETECT\";\r\n          newGameData.core_name = \"DETECT\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (deduceLabelOnFix && newGameData.path) {\r\n      const matches = gameData.path.match(/([^\\\\#]+)\\....$/);\r\n      if (matches.length>1) {\r\n        newGameData.label = matches[1];\r\n      }  \r\n    }\r\n    if (appendToLabelOnFix) {\r\n      newGameData.label = `${newGameData.label}${appendToLabelOnFixText}`;\r\n    }\r\n    if (changeBasePathOnFix && newGameData.path) {\r\n      const matches = newGameData.path.match(/([^\\\\]+\\....)$/);\r\n      if (matches.length>1) {\r\n        newGameData.path = `${changeBasePathOnFixPath}${matches[1]}`;\r\n      }\r\n    }\r\n\r\n    return newGameData;\r\n  }\r\n\r\n  const targetButtons={\r\n    Reset: targetController.empty.bind(targetController),\r\n    \"New\": newTargetPlaylist,\r\n    \"Fix visible\": fixAll,\r\n    Export: targetController.exportPlaylist.bind(targetController),\r\n  }\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <header className={styles.header}>\r\n        <h1 className={styles.title}>Retroarch playlist mixer</h1>\r\n      </header>\r\n      <div className={styles.playlistPanel}>\r\n        <Playlist controller={sourceContext} onGameClick={copyOnClick} buttons={sourceButtons}/>\r\n        <Playlist controller={targetContext} onGameClick={deleteOnClick} buttons={targetButtons}/>\r\n      </div>\r\n      <div>\r\n        <h4 onClick={onClickCopyOpts}>({copyOptsVisible?'-':'+'})When copying:</h4>\r\n        {\r\n          copyOptsVisible?(\r\n            <ul>\r\n              <li><input type=\"checkbox\" checked={changeCoreOnCopy} onChange={onChangeChangeCoreOnCopy} />\r\n                Change core name and path to <select value={coreSourceOnCopy} onChange={onChangeCoreSourceOnCopy}>\r\n                  <option value=\"sourcePlaylist\">Source Playlist default core</option>\r\n                  <option value=\"targetPlaylist\">Target Playlist default core</option>\r\n                  <option value=\"detect\">DETECT</option>\r\n                </select>\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={deduceLabelOnCopy} onChange={onChangeDeduceLabelOnCopy} />\r\n                If label is <input type=\"text\" value={labelCheckOnCopy} onChange={onChangeLabelCheckOnCopy}/>, deduce label from filename\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={changeBasePathOnCopy} onChange={onChangeChangeBasePathOnCopy} />\r\n                change base path to <input type=\"text\" value={basePathOnCopy} onChange={onChangeBasePathOnCopy}/>\r\n              </li>\r\n            </ul>\r\n          ):null\r\n        }\r\n\r\n        <h4 onClick={onClickFixOpts}>({fixOptsVisible?'-':'+'})When fixing:</h4>\r\n        {\r\n          fixOptsVisible?(\r\n            <ul>\r\n              <li><input type=\"checkbox\" checked disabled />\r\n                Match to source on <select value={matchTypeOnFix} onChange={onChangeMatchTypeOnFix}>\r\n                  <option value=\"label\">Label</option>\r\n                  <option value=\"crc\">CRC</option>\r\n                  <option value=\"filename\">Filename</option>\r\n                  <option value=\"fullpath\">Full path</option>\r\n                </select>\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={changeCoreOnFix} onChange={onChangeChangeCoreOnFix} />\r\n                Change core name/path to <select value={coreSourceOnFix} onChange={onChangeCoreSourceOnFix}>\r\n                  <option value=\"sourcePlaylist\">Source Playlist default core</option>\r\n                  <option value=\"targetPlaylist\">Target Playlist default core</option>\r\n                  <option value=\"detect\">DETECT</option>\r\n                </select>\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={pickOnlyOnFix} onChange={onChangePickOnlyOnFix} />\r\n                pick only entries with <select value={pickOnlyOnFixType} onChange={onChangePickOnlyOnFixType}>\r\n                  <option value=\"label\">label</option>\r\n                  <option value=\"crc\">crc</option>\r\n                  <option value=\"basePath\">base path</option>\r\n                </select> matching <input type=\"text\" value={pickOnlyOnFixSpec} onChange={onChangePickOnlyOnFixSpec}/>\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={deduceLabelOnFix} onChange={onChangeDeduceLabelOnFix} />\r\n                Deduce label from filename\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={appendToLabelOnFix} onChange={onChangeAppendToLabelOnFix} />\r\n                Append <input type=\"text\" value={appendToLabelOnFixText} onChange={onChangeAppendToLabelOnFixText}/> to label\r\n              </li>\r\n              <li><input type=\"checkbox\" checked={changeBasePathOnFix} onChange={onChangeChangeBasePathOnFix} />\r\n                change base path to <input type=\"text\" value={changeBasePathOnFixPath} onChange={onChangeChangeBasePathOnFixPath}/>\r\n              </li>\r\n            </ul>\r\n          ):null\r\n        }\r\n      </div>\r\n      <div className={styles.textPanel}>\r\n        <div className={styles.filter}>\r\n          Filter visible by <input onChange={onFilterChange} value={filter} className={styles.filterText} />\r\n          <select value={filterType} onChange={onFilterTypeChange}>\r\n            <option value=\"label\">Label</option>\r\n            <option value=\"filename\">Filename</option>\r\n            <option value=\"crc32\">CRC32</option>\r\n            <option value=\"path\">Full path</option>\r\n          </select>\r\n          <button onClick={clearFilter}>clear</button>\r\n        </div>\r\n        <textarea rows=\"6\" disabled value=\"console\"></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__1FRtk\",\"label\":\"Game_label__3Xfiz\",\"path\":\"Game_path__3ACC7\",\"crc32\":\"Game_crc32__26Bi1\",\"dbName\":\"Game_dbName__slKDc\",\"core\":\"Game_core__3hxuS\",\"coreName\":\"Game_coreName__1Af_M\",\"corePath\":\"Game_corePath__3Riq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1Eui0\",\"App\":\"App_App__3xJ5q\",\"header\":\"App_header__1FxIt\",\"playlistPanel\":\"App_playlistPanel__fAtzO\",\"textPanel\":\"App_textPanel__1ksXY\",\"filter\":\"App_filter__2rpJO\",\"filterText\":\"App_filterText__rjA92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Playlist_wrap__25CD4\",\"content\":\"Playlist_content__3q2tv\",\"buttonPanel\":\"Playlist_buttonPanel__1XzPe\",\"filename\":\"Playlist_filename__3TaF-\",\"dropzone\":\"Playlist_dropzone__3jSaX\",\"dropzoneTitle\":\"Playlist_dropzoneTitle__MvR8x\"};"],"sourceRoot":""}